name: Publish to npm

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write  # Required for OIDC authentication with npm

jobs:
  publish:
    name: Build, Test & Publish
    runs-on: ubuntu-latest
    environment: npm-publish  # Links to npm trusted publisher

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build TypeScript
        run: bun run build

      - name: Run tests
        run: bun test

      - name: Setup .npmrc for authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify package.json version matches tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PKG_VERSION=$(node -p "require('./package.json').version")
          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "::error::Tag version ($TAG_VERSION) doesn't match package.json version ($PKG_VERSION)"
            exit 1
          fi
          echo "âœ… Version match: $TAG_VERSION"

      - name: Publish to npm (OIDC)
        run: npm publish --provenance --access public

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/')
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ steps.version.outputs.VERSION }}
          body: |
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

            ## Installation
            ```bash
            npx ngss-mcp@${{ steps.version.outputs.VERSION }}
            ```
          draft: false
          prerelease: false
